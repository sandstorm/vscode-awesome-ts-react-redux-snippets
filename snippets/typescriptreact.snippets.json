{
	"component": {
		"prefix": "component",
		"body": [
			"import * as React from 'react';",
			"\r",
			"interface ${1:ComponentName}Props {",
			"\treadonly template: string;",
			"}",
			"\r",
			"// Put this type definition somewhere to reuse it throughout the code base",
			"type PickDefaultProps<Props, defaultPropsKeys extends keyof Props> = Required<{",
				"[P in defaultPropsKeys]: Props[P]",
			"}>;",
			"\r",
			"type DefaultProps = PickDefaultProps<${1:ComponentName}Props, 'template'>;",
			"\r",
			"interface ${1:ComponentName}State {",
			"\treadonly isCool: boolean;",
			"}",
			"\r",
			"const initial${1:ComponentName}State: ${1:ComponentName}State = {",
			"\tisCool: true,",
			"};",
			"\r",
			"export default class ${1:ComponentName} extends React.PureComponent<${1:ComponentName}Props, ${1:ComponentName}State> {",
			"\tpublic static readonly defaultProps: DefaultProps = {",
			"\t\ttemplate: 'Bro!',",
			"\t};",
			"\r",
			"\tpublic constructor(props: ${1:ComponentName}Props) {",
			"\t\tsuper(props);",
			"\t\tthis.state = initial${1:ComponentName}State;",
			"\t}",
			"\r",
			"\tpublic render(): JSX.Element {",
			"\t\treturn <div>Hello ${1:ComponentName}</div>;",
			"\t}",
			"}"
		],
		"description": "[Sandstorm] Type safe PureComponent."
	},
	"container": {
		"prefix": "container",
		"body": [
			"import * as React from 'react';",
			"import {connect} from 'react-redux';",
			"import {Dispatch} from 'redux';",
			"import {actions, ApplicationState, selectors} from '../../Redux/Store';",
			"\r",
			"const mapStateToProps = (state: ApplicationState) => ({});",
			"\r",
			"const mapDispatchToProps = (dispatch: Dispatch) => ({});",
			"\r",
			"type ${1:ContainerName}Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;",
			"\r",
			"class ${1:ContainerName} extends React.PureComponent<${1:ContainerName}Props> {",
			"\tpublic render(): JSX.Element {",
			"\t\treturn <React.Fragment>Hello ${1:ContainerName}!</React.Fragment>;",
			"\t}",
			"}",
			"\r",
			"export default connect(mapStateToProps, mapDispatchToProps)(${1:ContainerName});"
		],
		"description": "[Sandstorm] Type safe container component."
	},
	"storybook story": {
		"prefix": "story",
		"body": [
			"import { action } from '@storybook/addon-actions';",
			"import { storiesOf } from '@storybook/react';",
			"import * as React from 'react';",
			"import ${1:ComponentName} from '.';",
			"\r",
			"storiesOf('${1:ComponentName}', module)",
			"\t.add('${2:TestCaseName}', () => (",
			"\t\t<${1:ComponentName} />",
			"\t));"
		],
		"description": "[Sandstorm] Type safe story for Storybook."
	},
	"component test": {
		"prefix": "test",
		"body": [
			"import * as React from 'react';",
			"import {render} from 'react-dom';",
			"import * as ReactTestRenderer from 'react-test-renderer';",
			"import ${1:ComponentName} from '.';",
			"\r",
			"describe('${1:ComponentName} tests', () => {",
			"\tit('should render without crashing', () => {",
			"\t\trender(<${1:ComponentName}/>, document.createElement('div'));",
			"\t});",
			"\r",
			"\tit('should match snapshot', () => {",
			"\t\texpect(ReactTestRenderer.create(<${1:ComponentName}/>)).toMatchSnapshot();",
			"\t});",
			"});"
		],
		"description": "[Sandstorm] Type safe component test."
	}
}
