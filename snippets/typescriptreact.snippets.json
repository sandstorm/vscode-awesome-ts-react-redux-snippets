{
	"Component Skeleton": {
		"prefix": "component",
		"body": [
			"import * as React from 'react';",
			"import { PickDefaultProps } from '@sandstormmedia/react-redux-ts-utils';",
			"\r",
			"//",
			"// Props",
			"//",
			"interface ${1:ComponentName}Props {",
			"\ttemplate: string;",
			"}",
			"\r",
			"type DefaultProps = PickDefaultProps<${1:ComponentName}Props, 'template'>;",
			"\r",
			"const defaultProps: DefaultProps = {",
			"\ttemplate: 'Bro',",
			"};",
			"\r",
			"//",
			"// State",
			"//",
			"interface ${1:ComponentName}State {",
			"\tisCool: boolean;",
			"}",
			"\r",
			"const initialState: ${1:ComponentName}State = {",
			"\tisCool: true,",
			"};",
			"\r",
			"//",
			"// Class",
			"//",
			"export default class ${1:ComponentName} extends React.PureComponent<${1:ComponentName}Props, ${1:ComponentName}State> {",
			"\tpublic static defaultProps = defaultProps;",
			"\r",
			"\tpublic constructor(props: ${1:ComponentName}Props) {",
			"\t\tsuper(props);",
			"\t\tthis.state = initialState;",
			"\t}",
			"\r",
			"\tpublic render(): JSX.Element {",
			"\t\treturn (",
			"\t\t\t<div className=\"template\">",
			"\t\t\t\t<p>{`Hey, ${this.state.isCool ? 'cool ' : ''}${this.props.template}!`}</p>",
			"\t\t\t</div>",
			"\t\t);",
			"\t}",
			"}",
			""
		],
		"description": "[Sandstorm] Type safe PureComponent."
	},
	"Container Skeleton": {
		"prefix": "container",
		"body": [
			"import * as React from 'react';",
			"import { connect } from 'react-redux';",
			"\r",
			"import { actions, ApplicationState, selectors } from '../../Redux/Store';",
			"\r",
			"const mapStateToProps = (state: ApplicationState) => ({});",
			"\r",
			"const mapDispatchToProps = {};",
			"\r",
			"type ${1:ContainerName}Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;",
			"\r",
			"class ${1:ContainerName} extends React.PureComponent<${1:ContainerName}Props> {",
			"\tpublic render(): JSX.Element {",
			"\t\treturn <React.Fragment>Hello ${1:ContainerName}!</React.Fragment>;",
			"\t}",
			"}",
			"\r",
			"export default connect(mapStateToProps, mapDispatchToProps)(${1:ContainerName});",
			""
		],
		"description": "[Sandstorm] Type safe container component."
	},
	"Storybook Story Skeleton": {
		"prefix": "story",
		"body": [
			"import { action } from '@storybook/addon-actions';",
			"import { storiesOf } from '@storybook/react';",
			"import * as React from 'react';",
			"\r",
			"import ${1:ComponentName} from '.';",
			"\r",
			"storiesOf('${1:ComponentName}', module)",
			"\t.add('${2:TestCaseName}', () => (",
			"\t\t<${1:ComponentName} />",
			"\t));",
			""
		],
		"description": "[Sandstorm] Type safe story for Storybook."
	},
	"Component Test Skeleton": {
		"prefix": "test",
		"body": [
			"import * as React from 'react';",
			"import { render } from 'react-dom';",
			"import * as ReactTestRenderer from 'react-test-renderer';",
			"\r",
			"import ${1:ComponentName} from '.';",
			"\r",
			"describe('${1:ComponentName} tests', () => {",
			"\tit('should render without crashing', () => {",
			"\t\trender(<${1:ComponentName} />, document.createElement('div'));",
			"\t});",
			"\r",
			"\tit('should match snapshot', () => {",
			"\t\texpect(ReactTestRenderer.create(<${1:ComponentName} />)).toMatchSnapshot();",
			"\t});",
			"});",
			""
		],
		"description": "[Sandstorm] Type safe component test."
	}
}
