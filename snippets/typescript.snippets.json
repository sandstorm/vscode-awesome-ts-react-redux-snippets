{
	"Redux Store Skeleton": {
		"prefix": "store",
		"body": [
			"import {ActionsUnion, createAction} from '@martin_hotell/rex-tils';",
			"import {ApplicationState} from '..';",
			"",
			"/**",
			" * State",
			" */",
			"export interface ${1:StoreName}State {",
			"\treadonly template?: string;",
			"}",
			"",
			"const initialState: ${1:StoreName}State = {",
			"\ttemplate: undefined,",
			"};",
			"",
			"/**",
			" * Actions",
			" */",
			"export enum ActionTypes {",
			"\tTEMPLATE_ACTION = '@@${2:NameSpace}/${1:StoreName}/TEMPLATE_ACTION',",
			"}",
			"",
			"export const actions = {",
			"\ttemplateAction: (newTemplate: string) => createAction(ActionTypes.TEMPLATE_ACTION, {newTemplate}),",
			"};",
			"",
			"type ${1:StoreName}sAction = ActionsUnion<typeof actions>;",
			"",
			"/**",
			" * Reducer",
			" */",
			"export function reducer(state: ${1:StoreName}State = initialState, action: ${1:StoreName}sAction): ${1:StoreName}State {",
			"\tswitch (action.type) {",
			"\t\tcase ActionTypes.TEMPLATE_ACTION:",
			"\t\t\treturn {...state, template: action.payload.newTemplate};",
			"\t\tdefault:",
			"\t\t\treturn state;",
			"\t}",
			"}",
			"",
			"/**",
			" * Selectors",
			" */",
			"const templateSelector = (state: ApplicationState) => state.${3:PathToStore}.${1:StoreName}.template;",
			"",
			"export const selectors = {",
			"\ttemplate: templateSelector,",
			"};",
			"",
			"/**",
			" * Epics / Sagas / other async action handlers",
			" */"
		],
		"description": "[Sandstorm] Type safe Redux store."
	},
	"Redux Epic": {
		"prefix": "epic",
		"body": [
			"const ${2:EpicName}Epic: Epic<${1:ComponentName}Action> = (actions$: ActionsObservable<${1:ComponentName}Action>) => actions$",
			"\t.pipe(",
			"\t\tofType(ActionTypes.ACTION_TYPE),",
			"\t\tdelay(1000),",
			"\t\tmergeMap(action =>",
			"\t\t\tajax.getJSON('/api/endpoints/template').pipe(",
			"\t\t\t\tmap(response => actions.anotherAction())",
			"\t\t\t)",
			"\t\t)",
			"\t);",
			"${3:Don't forget to export the epic!}"
		],
		"description": "[Sandstorm] Type safe Redux Epic."
	}
}
